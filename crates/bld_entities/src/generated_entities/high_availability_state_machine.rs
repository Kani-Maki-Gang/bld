//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "high_availability_state_machine")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i32,
    pub last_applied_log: i32,
    pub date_created: DateTime,
    pub date_updated: Option<DateTime>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::high_availability_client_serial_responses::Entity")]
    HighAvailabilityClientSerialResponses,
    #[sea_orm(has_many = "super::high_availability_client_status::Entity")]
    HighAvailabilityClientStatus,
}

impl Related<super::high_availability_client_serial_responses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::HighAvailabilityClientSerialResponses.def()
    }
}

impl Related<super::high_availability_client_status::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::HighAvailabilityClientStatus.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
